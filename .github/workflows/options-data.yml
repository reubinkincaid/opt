name: Options Data Collection

on:
  schedule:
    # Target: 8:00 PM EST (0:00 UTC) - Set 30 minutes earlier to account for delays
    - cron: '30 23 * * 1-5'  # 7:30 PM EST (23:30 UTC)
    
    # Target: 9:20 AM EST (13:20 UTC) - Set 30 minutes earlier to account for delays
    - cron: '50 12 * * 1-5'  # 8:50 AM EST (12:50 UTC)
  
  workflow_dispatch:  # Allow manual trigger
    inputs:
      test_mode:
        description: 'Run in test mode'
        required: false
        default: 'false'
        type: boolean

jobs:
  collect-options-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.13'
        
    # Add the caching step here, between Python setup and dependency installation
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy scipy yfinance==0.2.58 pyarrow
        pip install -r requirements.txt
        
    - name: Create options_data directory
      run: mkdir -p options_data
      
    - name: Run Options Analysis Script
      run: |
        if [[ "${{ github.event.inputs.test_mode }}" == "true" ]]; then
          echo "Running in TEST MODE"
          python -c "from main import run_automated_data_collection; run_automated_data_collection(test_mode=True)"
        else
          echo "Running in PRODUCTION MODE"
          python main.py
        fi
        
    - name: Commit and push changes
      run: |
        git config --global user.name 'GitHub Actions Bot'
        git config --global user.email 'actions@github.com'
        git add options_data*/ # This will add both options_data and options_data_test
        timestamp=$(date -u +"%Y-%m-%d %H:%M:%S")
        git commit -m "Options data update: $timestamp" || echo "No changes to commit"
        git push